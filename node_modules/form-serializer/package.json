{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/macek/jquery-serialize-object/master/package.json",
          "gitUrl": "git://github.com/macek/jquery-serialize-object.git",
          "httpsUrl": "git+https://github.com/macek/jquery-serialize-object.git",
          "shortcut": "github:macek/jquery-serialize-object",
          "ssh": "git@github.com:macek/jquery-serialize-object.git",
          "sshUrl": "git+ssh://git@github.com/macek/jquery-serialize-object.git",
          "type": "github"
        },
        "name": null,
        "raw": "git+https://github.com/macek/jquery-serialize-object.git",
        "rawSpec": "git+https://github.com/macek/jquery-serialize-object.git",
        "scope": null,
        "spec": "git+https://github.com/macek/jquery-serialize-object.git",
        "type": "hosted"
      },
      "/home/kostia/_unified_coding/starters/rails-webpack"
    ]
  ],
  "_from": "git+https://github.com/macek/jquery-serialize-object.git",
  "_id": "form-serializer@2.5.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/form-serializer",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/macek/jquery-serialize-object/master/package.json",
      "gitUrl": "git://github.com/macek/jquery-serialize-object.git",
      "httpsUrl": "git+https://github.com/macek/jquery-serialize-object.git",
      "shortcut": "github:macek/jquery-serialize-object",
      "ssh": "git@github.com:macek/jquery-serialize-object.git",
      "sshUrl": "git+ssh://git@github.com/macek/jquery-serialize-object.git",
      "type": "github"
    },
    "name": null,
    "raw": "git+https://github.com/macek/jquery-serialize-object.git",
    "rawSpec": "git+https://github.com/macek/jquery-serialize-object.git",
    "scope": null,
    "spec": "git+https://github.com/macek/jquery-serialize-object.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+https://github.com/macek/jquery-serialize-object.git#68ec73289dcffa533770f07616633696c552bf6a",
  "_shasum": "d59b0b0f551c23334af085b7392cd7de87f945c5",
  "_shrinkwrap": null,
  "_spec": "git+https://github.com/macek/jquery-serialize-object.git",
  "_where": "/home/kostia/_unified_coding/starters/rails-webpack",
  "author": {
    "email": "paulmacek@gmail.com",
    "name": "macek"
  },
  "bugs": {
    "url": "https://github.com/macek/jquery-serialize-object/issues"
  },
  "dependencies": {},
  "description": "serialize form fields into an object or JSON",
  "devDependencies": {
    "uglify-js": "^2.4.16"
  },
  "gitHead": "68ec73289dcffa533770f07616633696c552bf6a",
  "homepage": "https://github.com/macek/jquery-serialize-object#readme",
  "keywords": [
    "form",
    "serialize",
    "json",
    "object",
    "jquery-plugin"
  ],
  "license": "BSD-3-Clause",
  "main": "./jquery.serialize-object.js",
  "name": "form-serializer",
  "optionalDependencies": {},
  "plugin": {
    "name": "jQuery serializeObject",
    "type": "jQuery"
  },
  "readme": "jQuery Serialize Object\n=======================\n\n**As seen on StackOverflow: [Convert forms to JSON LIKE A BOSS][SO].**\n\nAdds the method `serializeObject` to jQuery, to perform complex form\nserialization into JavaScript objects.\n\nThe current implementation relies in `jQuery.serializeArray()` to grab the form\nattributes and then create the object using the input `name` attributes.\n\nThis means it will serialize the inputs that are supported by\n`.serializeArray()`, that use the standard W3C rules for [successful controls][w3c_controls]\nto determine which inputs should be included; in particular:\n\n* The input cannot be disabled and must contain a name attribute.\n* No submit button value is serialized since the form is not submitted using a button.\n* Data from `<input type=\"file\">` inputs are not serialized.\n\n\nInstallation\n------------\n\n**option 1: Bower**\n\n```sh\n$ bower install jquery-serialize-object\n```\n\n**option 2: Manual**\n\nCopy the `dist/jquery-serialize-object.min.js` to your project.\n\nYou can include the plugin in the `HEAD` element or at the bottom of your `BODY`\ntag. Wherever you choose to add it, it **must** be included after your jQuery.\n\n```html\n<head>\n  <script src=\"jquery.min.js\"></script>\n  <script src=\"jquery.serialize-object.min.js\"></script>\n</head>\n```\n\n2.0\n---\n\nVersion 2.0 takes jquery-serialize-object into maturity. It is now backed by a\nfull test suite so you can be confident that it will work in your web app.\n\nMoving ahead, on top of core serialization, `.serializeObject` will support\ncorrect serializaton for `boolean` and `number` values, resulting valid types\nfor both cases.\n\nLook forward to these `>= 2.5.0`\n\n**Update:** `>= 2.4.0` now serializes `<input type=\"checkbox\">` as a `boolean`. See\nthe [test][boolean] for specific behavior.\n\n\nAPI\n---\n\nGiven a basic HTML form\n\n```html\n<form id=\"contact\">\n  <input name=\"user[email]\" value=\"jsmith@example.com\">\n  <input name=\"user[pets][]\" type=\"checkbox\" value=\"cat\" checked>\n  <input name=\"user[pets][]\" type=\"checkbox\" value=\"dog\" checked>\n  <input name=\"user[pets][]\" type=\"checkbox\" value=\"bird\">\n  <input type=\"submit\">\n</form>\n```\n\n**.serializeObject** &mdash; serializes the selected form into a JavaScript object\n\n```js\n$('form#contact').serializeObject();\n//=> {user: {email: \"jsmith@example.com\", pets: [\"cat\", \"dog\"]}}\n```\n\n**.serializeJSON** &mdash; serializes the selected form into [JSON][json]\n\n```js\n$('form#contact').serializeJSON();\n//=> '{\"user\":{\"email\":\"jsmith@example.com\",\"pets\":[\"cat\",\"dog\"]}}'\n```\n\n**FormSerializer.patterns** &mdash; modify the patterns used to match field\nnames\n\nMany of you have requested to allow `-` in field names or use `.` to nest keys.\nYou can now configure these to your heart's content.\n\n[Hyphen][dash-notation] example\n\n```js\n$.extend(FormSerializer.patterns, {\n  validate: /^[a-z][a-z0-9_-]*(?:\\[(?:\\d*|[a-z0-9_-]+)\\])*$/i,\n  key:      /[a-z0-9_-]+|(?=\\[\\])/gi,\n  named:    /^[a-z0-9_-]+$/i\n});\n```\n\n[Dot-notation][dot-notation] example\n\n```js\n$.extend(FormSerializer.patterns, {\n  validate: /^[a-z][a-z0-9_]*(?:\\.[a-z0-9_]+)*(?:\\[\\])?$/i\n});\n```\n\n*Validating and Key parsing*\n\n* `validate` &mdash; only valid input names will be serialized; invalid names\n  will be skipped\n\n* `key` &mdash; this pattern parses all \"keys\" from the input name; You will\n  want to use `/g` as a modifier with this regexp.\n\n*Key styles*\n\n* `push` &mdash; pushe a value to an array\n\n  ```html\n  <input name=\"foo[]\" value=\"a\">\n  <input name=\"foo[]\" value=\"b\">\n  ```\n\n  ```js\n  $(\"form\").serializeObject();\n  //=> {foo: [a, b]}\n  ```\n\n* `fixed` &mdash; add a value to an array at a specified index\n\n  ```html\n  <input name=\"foo[2]\" value=\"a\">\n  <input name=\"foo[4]\" value=\"b\">\n  ```\n\n  ```js\n  $(\"form\").serializeObject();\n  //=> {foo: [, , \"a\", , \"b\"]}\n  ```\n\n* `named` &mdash; adds a value to the specified key\n\n  ```html\n  <input name=\"foo[bar]\" value=\"a\">\n  <input name=\"foo[bof]\" value=\"b\">\n  <input name=\"hello\" value=\"world\">\n  ```\n\n  ```js\n  $(\"form\").serializeObject();\n  //=> {foo: {bar: \"a\", bof: \"b\"}, hello: \"world\"}\n  ```\n\nTests\n-----\n\nIf you have [node.js][node] installed, as a convenience, you can run\n\n```sh\n$ npm test\n```\n\nIf you do not have node installed, simply\n\n```sh\n$ open ./test/test.html\n```\n\n\nCoffeeScript\n------------\n\nCoffeeScript has been dropped for `>= 2.0.0`. If members of the community would\nlike to support this, please feel free to add a CoffeeScript version.\n\nIf you'd like to use the the `1.0.0` version, it is still available [here][legacy].\n\n\nContributing\n------------\n\nAll pull requests **must** be backed by tests or they will be rejected.\n\nOnce you have finished your changes, build the new plugin:\n\n```sh\n$ npm run-script build\n```\n\n**Do not** bump the version. I will handle versioning.\n\n\n[SO]: http://stackoverflow.com/a/8407771/184600\n[w3c_controls]: http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n[json]: http://json.org\n[node]: http://nodejs.org\n[legacy]: https://github.com/macek/jquery-serialize-object/releases/tag/1.0.0\n[dash-notation]: https://github.com/macek/jquery-serialize-object/issues/6\n[dot-notation]: https://github.com/macek/jquery-serialize-object/issues/4\n[boolean]: https://github.com/macek/jquery-serialize-object/blob/master/test/integration/encode-test.js",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/macek/jquery-serialize-object.git"
  },
  "scripts": {
    "build": "npm run minify",
    "minify": "uglifyjs jquery.serialize-object.js -m -c --comments > dist/jquery.serialize-object.min.js",
    "test": "npm run build && open ./test/test.html"
  },
  "version": "2.5.0"
}
